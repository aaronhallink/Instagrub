{
    "project": {},
    "files": {
        "js\\api.js": {
            "name": "js\\api.js",
            "modules": {},
            "classes": {
                "api": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\scripts.js": {
            "name": "js\\scripts.js",
            "modules": {
                "scripts": 1
            },
            "classes": {
                "scripts": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "scripts": {
            "name": "scripts",
            "submodules": {},
            "classes": {
                "api": 1,
                "scripts": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js\\scripts.js",
            "line": 1,
            "description": "A collection of general functions used in the Intsagrub application"
        }
    },
    "classes": {
        "api": {
            "name": "api",
            "shortname": "api",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scripts",
            "file": "js\\api.js",
            "line": 2,
            "description": "This class defines an object used to interact with the Yummly API",
            "static": 1,
            "is_constructor": 1
        },
        "scripts": {
            "name": "scripts",
            "shortname": "scripts",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scripts",
            "namespace": "",
            "file": "js\\scripts.js",
            "line": 1,
            "description": "A collection of general functions used in the Intsagrub application"
        }
    },
    "classitems": [
        {
            "file": "js\\api.js",
            "line": 10,
            "description": "Keeps the api prototype static, we only need one copy.",
            "is_constructor": 1,
            "class": "api"
        },
        {
            "file": "js\\api.js",
            "line": 22,
            "description": "Uses the PHP backend to request a JSON that will have 10 recipes based on the search terms.",
            "itemtype": "method",
            "name": "SearchRecipe",
            "params": [
                {
                    "name": "args",
                    "description": "The parameters for the searchRecipe Yummly API call.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The function excuted with the returned JSON.",
                    "type": "Function"
                }
            ],
            "class": "api"
        },
        {
            "file": "js\\api.js",
            "line": 33,
            "description": "Use the PHP backend to search for a specific recipe must use the recipe's unique ID.",
            "itemtype": "method",
            "name": "getRecipe",
            "params": [
                {
                    "name": "args",
                    "description": "The parameters for the getRecipe Yummly API call.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The function executed with the returned JSON.",
                    "type": "Function"
                }
            ],
            "class": "api"
        },
        {
            "file": "js\\scripts.js",
            "line": 14,
            "description": "Displays the ingredients that the user added to the text area.",
            "itemtype": "method",
            "name": "displayIngredients",
            "class": "scripts",
            "module": "scripts"
        },
        {
            "file": "js\\scripts.js",
            "line": 39,
            "description": "Checks whether or not the given ingredient was already inputted.",
            "itemtype": "method",
            "name": "checkIngredient",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the ingredient to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "`true` if the ingredient **`name`** has been inputted by the user. Returns `false` otherwise.",
                "type": "Boolean"
            },
            "class": "scripts",
            "module": "scripts"
        },
        {
            "file": "js\\scripts.js",
            "line": 55,
            "description": "Changes the Add button image to a pressed button when clicked.",
            "itemtype": "event",
            "name": "changeImageAdd",
            "class": "scripts",
            "module": "scripts"
        },
        {
            "file": "js\\scripts.js",
            "line": 66,
            "description": "Reverts the pressed Add button image to an unpressed button when done clicking.",
            "itemtype": "event",
            "name": "revertImageAdd",
            "class": "scripts",
            "module": "scripts"
        },
        {
            "file": "js\\scripts.js",
            "line": 76,
            "description": "Changes the Search button image to a pressed button when clicked.",
            "itemtype": "event",
            "name": "changeImageSearch",
            "class": "scripts",
            "module": "scripts"
        },
        {
            "file": "js\\scripts.js",
            "line": 86,
            "description": "Reverts the pressed Search button image to an unpressed button when done clicking.",
            "itemtype": "event",
            "name": "revertImageSearch",
            "class": "scripts",
            "module": "scripts"
        },
        {
            "file": "js\\scripts.js",
            "line": 96,
            "description": "This function makes the query string, then calls the api object to make a api search\nThen it gets the matches and displays them.",
            "itemtype": "method",
            "name": "recipeSearch",
            "class": "scripts",
            "module": "scripts"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nKeeps the api prototype static, we only need one copy.",
            "line": " js\\api.js:10"
        }
    ]
}